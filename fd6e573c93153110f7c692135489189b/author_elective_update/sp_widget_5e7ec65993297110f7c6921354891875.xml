<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $timeout, i18n, $rootScope, mhSkillMatrixService) {

	var c = this;
	c.filterPills = [];
	c.expandRequiredSkills = false;
	c.expandAdditionalSkills = false;
	c.modifiedFilters = {
		"skills": new Set(),
		"team_members": new Set()
	};
	c.clearLabel = i18n.getMessage("Clear {0}");
	c.toggleFlyout = false;
	c.isSearching = false;
	c.limit = 20;
	c.searchCharLimit = 3;

	c.filterData = [{
		"filterSelectedCount": 0,
		"totalSelected": 0,
		"title": i18n.getMessage("Skills"),
		"showFilterSection": true,
		"showMore": true,
		"filterDisplayCount": 0,
		"isSearchable": true,
		"filterSections": [{
			"filterSectionId": "required_skills",
			"selected": false,
			"sectionSelectedCount": 0,
			"limit": c.limit,
			"displayCount": 0,
			"filterOptions": [],
			"title": i18n.getMessage("Required skills")
		},
		{
			"filterSectionId": "additional_skills",
			"selected": false,
			"sectionSelectedCount": 0,
			"limit": c.limit,
			"displayCount": 0,
			"filterOptions": [],
			"title": i18n.getMessage("Additional skills")
		}
		],
		"filterId": "skills"
	},
	{
		"filterSelectedCount": 0,
		"totalSelected": 0,
		"title": i18n.getMessage("Team members"),
		"filterSections": [{
			"filterSectionId": "reportees",
			"filterOptions": [],
		}],
		"filterId": "team_members"
	}
	];

    function initFilters() {
        var options = mhSkillMatrixService.getFilterOptions();
        updateFilterOptions(options);
    }

    var filterOptionsChangeEvent = mhSkillMatrixService.getFilterOptionsChangeEvent();

    var filterOptionsChangeEventListener = $rootScope.$on(filterOptionsChangeEvent, function(event, data) {
        c.clearAllFilters();
        updateFilterOptions(data);
    });

    function updateFilterOptions(options) {
        var employees = options['employees'];
        var skills = options['skills'];
        var filteredEmployees = c.data.allReportees.filter(function(reportee) {
            return _.includes(employees, reportee.id);
        });
        setFilterOptions('skills', 'required_skills', skills['requiredSkills']);
        setFilterOptions('skills', 'additional_skills', skills['additionalSkills']);
        setFilterOptions('team_members', 'reportees', filteredEmployees);
    }

    $scope.$on('$destroy', function() {
        filterOptionsChangeEventListener();
    });

	function setFilterOptions(filterId, filterSectionId, options) {
		if (_.isEmpty(options))
			return;

		_.forEach(options, function (eachOption) {
			eachOption['selected'] = false;
			eachOption['display'] = false;
		});

		var filter = _.find(c.filterData, _.matchesProperty('filterId', filterId));

		if (!_.isEmpty(filter)) {
			var filterSection = _.find(filter.filterSections, _.matchesProperty('filterSectionId', filterSectionId));
			if (!_.isEmpty(filterSection))
				filterSection.filterOptions = options;
		}
	}
	c.toggleAccordion = function (filterSection) {
		if (filterSection == 'required_skills')
			c.expandRequiredSkills = !c.expandRequiredSkills;
		else
			c.expandAdditionalSkills = !c.expandAdditionalSkills;
	}

	c.onFilterSectionValueChange = function (filter, filterSection) {
		filter.filterSelectedCount -= filterSection.sectionSelectedCount;
		filterSection.filterOptions.forEach(function (filterOption) {
			filterSection.sectionSelectedCount = filterSection.selected ? filterSection.filterOptions.length : 0;
			if (filterSection.selected != filterOption.selected) {
				filterOption.selected = filterSection.selected;
				updateModifiedFilters(filter, filterOption);
			}
		});
		filter.filterSelectedCount += filterSection.sectionSelectedCount;
	}

	c.onFilterValueChange = function (filter, filterSection, filterOption) {
		var option = document.getElementById('option-checkbox-' + filterOption.id);
		if (option.checked) {
			filterSection.sectionSelectedCount++;
			filter.filterSelectedCount++;
		}
		else {
			filterSection.sectionSelectedCount--;
			filter.filterSelectedCount--;
		}
		filterSection.selected = filterSection.sectionSelectedCount >= 0;
		updateModifiedFilters(filter, filterOption);
	};

	c.applyFilter = function (filter) {
		$('#fieldset-' + filter.filterId).removeClass('open');
		filter.totalSelected = filter.filterSelectedCount;
		c.expandRequiredSkills = false;
		c.expandAdditionalSkills = false;
		c.modifiedFilters[filter.filterId].clear();
		addFilterPills(filter);
		resetSearch();
		mhSkillMatrixService.applyFilter(c.filterPills);
	};

	c.applyFilterFlyout = function () {
		$timeout(function () {
			c.filterData.forEach(function (filter) {
				filter.totalSelected = filter.filterSelectedCount;
				c.modifiedFilters[filter.filterId].clear();
				addFilterPills(filter);
				mhSkillMatrixService.applyFilter(c.filterPills);
			});
			resetSearch();
		}, 0);
	}

	c.clearFilterFlyout = function () {
		c.filterData.forEach(function (filter) {
			c.clearFilterGroup(filter);
		});
	}

	c.clearFilterGroup = function (filter) {
		filter.filterSections.forEach(function (filterSection) {
			filterSection.sectionSelectedCount = 0;
			filterSection.selected = false;
			filterSection.filterOptions.forEach(function (filterOption) {
				if (filterOption.selected) {
					filterOption.selected = false;
					updateModifiedFilters(filter, filterOption);
				}
			});
		});
		filter.filterSelectedCount = 0;
	};

	c.clearPill = function (filterOption) {
		updateFilterPills(filterOption);
		updateFilterModel(filterOption);
		mhSkillMatrixService.applyFilter(c.filterPills);
	};

	function updateFilterPills(delPill) {
		c.filterPills = c.filterPills.filter(function (pill) {
			return !(delPill.id === pill.id && delPill.sourceId === pill.sourceId);
		});
	}

	function updateFilterModel(clearedPill) {
		var filter = _.find(c.filterData, _.matchesProperty('filterId', clearedPill.groupId));
		var filterSection = _.find(filter.filterSections, _.matchesProperty('filterSectionId', clearedPill.sourceId));
		filterSection.filterOptions.forEach(function (filterOption) {
			if (filterOption.id === clearedPill.id) {
				filterOption.selected = false;
				filter.filterSelectedCount--;
				filter.totalSelected--;
				filterSection.sectionSelectedCount--;
			}
		});
	}

	c.checkIfFilterAlreadyAdded = function (filterId, sourceId) {
		var filterPills = c.filterPills;
		var filterPillsLen = filterPills.length;
		if (filterPillsLen.length === 0)
			return false;
		for (var pIdx = 0; pIdx < filterPillsLen; pIdx++)
			if (filterPills[pIdx].id === filterId && filterPills[pIdx].sourceId === sourceId)
				return true;
		return false;
	};

	c.clearAllFilters = function () {
		c.filterPills.forEach(function (deletedPill) {
			c.clearPill(deletedPill);
		});
		c.filterData.forEach(function (filter) {
			filter.filterSections.forEach(function (filterSection) {
				filterSection.selected = false;
			});
		});
	}

	c.submitSearch = function (filter) {
		var searchText = c.searchTerm.toLowerCase();
		filter.filterDisplayCount = 0;
		filter.filterSections.forEach(function (filterSection) {
			filterSection.displayCount = 0;
		});
		if (searchText) {
			c.isSearching = true;
			if (searchText.length >= c.searchCharLimit) {
				filter.filterSections.forEach(function (filterSection) {
					filterSection.filterOptions.forEach(function (filterOption) {
						filterOption.display = false;
						if (filterOption.name.toLowerCase().indexOf(searchText) > -1) {
							filterOption.display = true;
							filterSection.displayCount++;
						}
					});
					filter.filterDisplayCount += filterSection.displayCount;
				});
			}
		}
		else
			c.isSearching = false;
	}

	c.disableApply = function () {
		var modifiedCount = c.modifiedFilters["skills"].size + c.modifiedFilters['team_members'].size;
		return modifiedCount == 0;
	}

	c.showMore = function (filterSection) {
		filterSection.limit += c.limit;
	}

	c.showLess = function (filterSection) {
		filterSection.limit = c.limit;
	}

	c.disableCancel = function () {
		var totalSelectedCount = 0;
		c.filterData.forEach(function (filter) {
			totalSelectedCount += filter.filterSelectedCount;
		});
		return totalSelectedCount == 0;
	}

	function updateFilterPills(delPill) {
		c.filterPills = c.filterPills.filter(function (pill) {
			return !(delPill.id === pill.id && delPill.sourceId === pill.sourceId);
		});
	}

	function addFilterPills(filter) {
		var deltaFilters = [];
		var groupId = filter.filterId;
		filter.filterSections.forEach(function (filterSection) {
			var sourceId = filterSection.filterSectionId;
			filterSection.filterOptions.forEach(function (filter) {
				var filterAdded = c.checkIfFilterAlreadyAdded(filter.id, sourceId);
				if (!filterAdded && filter.selected)
					c.filterPills.push({
						id: filter.id,
						name: filter.name,
						groupId: groupId,
						sourceId: sourceId,
						clearLabel: i18n.format(c.clearLabel, filter.name)
					});
				else if (filterAdded && !filter.selected)
					deltaFilters.push({
						id: filter.id,
						sourceId: sourceId
					});
			});
		});
		removeUnCheckedFilters(deltaFilters);
	}

	function removeUnCheckedFilters(filters) {
		var filtersLength = filters.length;
		c.filterPills = c.filterPills.filter(function (pill) {
			for (var fIdx = 0; fIdx < filtersLength; fIdx++) {
				if (filters[fIdx].id === pill.id && filters[fIdx].sourceId === pill.sourceId)
					return false;
			}
			return true;
		});
	}

    initFilters();
	function updateModifiedFilters(filter, filterOption) {
		var filterId = filter.filterId;
		if (c.modifiedFilters[filterId].has(filterOption.id))
			c.modifiedFilters[filterId].delete(filterOption.id);
		else
			c.modifiedFilters[filterId].add(filterOption.id);
	}

	function resetSearch() {
		c.isSearching = false;
		c.searchTerm = null;
	}
};]]></client_script>
        <controller_as>c</controller_as>
        <css>$label-primary-bg: #D1D2EE !default;&#13;
$badge-bg: #656E81 !default;&#13;
$panel-default-text: #181A1F !default;&#13;
$border-primary: #8790A1 !default;&#13;
$border-tertiary: #DADDE2 !default;&#13;
$border-secondary: #ACB2BE !default;&#13;
$brand-primary: #4F52BD !default;&#13;
$background-primary: #FFFFFF !default;&#13;
$text-white: #FFFFFF !default;&#13;
$text-muted: #656E81 !default;&#13;
$text-primary: #181A1F !default;&#13;
$font-size-xs: 12px !default;&#13;
$font-size-small: 14px !default;&#13;
$font-size-lg: 16px !default;&#13;
$sp-space--border: 1px !default;&#13;
$sp-space--xxs: 2px !default;&#13;
$sp-space--xs: 4px !default;&#13;
$sp-space--margin: 6px !default;&#13;
$sp-space--sm: 8px !default;&#13;
$sp-space--accordion: 11px !default;&#13;
$sp-space--md: 12px !default;&#13;
$sp-space--lg: 16px !default;&#13;
$sp-space--xl: 24px !default;&#13;
$sp-space-xxl: 36px !default;&#13;
$sp-space--dropdown: 300px !default;&#13;
$sp-space--grid: 414px;&#13;
$border: #D3D6DC !default;&#13;
$sp-space--close: 6px !default;&#13;
$close-color: var(--special-close-color-default, rgba(0, 0, 0, 0.70));&#13;
$checkbox-icon-size: 10px;&#13;
$icon-line-height: 16px;&#13;
$filter-content-margin: 20px !default;&#13;
$filter-skill-label-width: 152px !default;&#13;
$filter-pill-border: 1px !default;&#13;
$filter-pill-height: 68px !default;&#13;
&#13;
/* Common styles */&#13;
.btn.btn-link:disabled {&#13;
	border: none;&#13;
}&#13;
&#13;
.display-flex {&#13;
	display: flex;&#13;
}&#13;
&#13;
.space-between {&#13;
	justify-content: space-between;&#13;
	align-items: center;&#13;
}&#13;
&#13;
.align-left {&#13;
	text-align: left;&#13;
}&#13;
&#13;
.align-right {&#13;
	text-align: right;&#13;
}&#13;
&#13;
input[type="checkbox"] {&#13;
	accent-color: $brand-primary;&#13;
}&#13;
&#13;
.pointer {&#13;
	cursor: pointer;&#13;
}&#13;
&#13;
.mg-bt-lg {&#13;
	margin-bottom: $sp-space--lg;&#13;
}&#13;
&#13;
#hr-required_skills {&#13;
	margin-bottom: $sp-space--lg;&#13;
}&#13;
&#13;
.pd-initial {&#13;
	padding: initial !important;&#13;
}&#13;
&#13;
/* filter checkbox styles */&#13;
#filter-content-skills {&#13;
	margin-bottom: 0px;&#13;
	margin-left: $filter-content-margin + $sp-space--xl;&#13;
}&#13;
&#13;
.search-list {&#13;
	margin-left: 0;&#13;
}&#13;
&#13;
.default-list-group {&#13;
	position: relative;&#13;
	margin-bottom: 0;&#13;
	.filter-checkbox {&#13;
		position: relative;&#13;
		right: $sp-space--xl;&#13;
	}&#13;
&#13;
	span {&#13;
		position: relative;&#13;
		right: $sp-space--xl;&#13;
	}&#13;
}&#13;
&#13;
.search-option {&#13;
	padding: unset;&#13;
	margin-left: $sp-space--md;&#13;
}&#13;
&#13;
.search-option + .search-option {&#13;
	padding-top: $sp-space--sm;&#13;
}&#13;
&#13;
.search-warning-flyout {&#13;
	margin-bottom: $sp-space--xl;&#13;
}&#13;
&#13;
.search-warning {&#13;
	padding: $sp-space--xs $sp-space--md;&#13;
	color: $text-secondary;&#13;
}&#13;
&#13;
.list-group-item {&#13;
	border: none;&#13;
	padding: 0px;&#13;
}&#13;
&#13;
li.list-group-item:not(:last-child) {&#13;
	margin-bottom: $sp-space--sm;&#13;
}&#13;
&#13;
.filter-groups {&#13;
	border: 1px solid transparent;&#13;
}&#13;
&#13;
input[type="checkbox"] {&#13;
	cursor: pointer;&#13;
	position: absolute;&#13;
&#13;
	+label {&#13;
		cursor: pointer;&#13;
		padding-left: $sp-space--xl;&#13;
		margin-bottom: 0px;&#13;
		white-space: break-spaces;&#13;
	}&#13;
}&#13;
&#13;
.filter-label {&#13;
	max-width: $filter-skill-label-width;&#13;
	display: inline-block;&#13;
	overflow: hidden;&#13;
	text-overflow: ellipsis;&#13;
	white-space: nowrap;&#13;
}&#13;
&#13;
.filter-skills-label {&#13;
	position: relative;&#13;
	right: $sp-space--xl;&#13;
}&#13;
&#13;
.option-checkbox {&#13;
	margin-left: 0px !important;&#13;
	position: unset !important;&#13;
	opacity: 0;&#13;
	width: $sp-space--lg;&#13;
	height: $sp-space--lg;&#13;
	z-index: -1;&#13;
}&#13;
&#13;
.filter-select-all {&#13;
	padding: 0px;&#13;
	margin-bottom: $sp-space--sm;&#13;
}&#13;
&#13;
.filter-pill-display-flex {&#13;
	gap: $sp-space--sm;&#13;
	display: flex;&#13;
	flex-wrap: wrap;&#13;
}&#13;
&#13;
/* Filter pill styles */&#13;
.filter-pills-container {&#13;
	padding: $sp-space--md $sp-space--xl;&#13;
	background: $background-secondary;&#13;
	border-bottom: $sp-space--border solid $border-tertiary;&#13;
	align-items: center;&#13;
&#13;
	#filter-pills-group {&#13;
&#13;
		.pill {&#13;
			padding: $sp-space--xs $sp-space--sm;&#13;
			font-weight: 400;&#13;
			font-size: $font-size-small;&#13;
			background: $background-primary !important;&#13;
			box-sizing: border-box;&#13;
			border: $sp-space--border solid $border-secondary;&#13;
		}&#13;
&#13;
		.pill-text {&#13;
			margin: 0px $sp-space--xs;&#13;
		}&#13;
	}&#13;
&#13;
	.filter-pills-height {&#13;
		max-height: $filter-pill-height;&#13;
		overflow: hidden;&#13;
	}&#13;
&#13;
	.filter-pill-actions {&#13;
		padding-top: $sp-space--sm;&#13;
	}&#13;
&#13;
	.filter-pills-view-all-hide {&#13;
		visibility: hidden;&#13;
	}&#13;
}&#13;
&#13;
/* Desktop &amp; Tablet styles*/&#13;
.filter-container {&#13;
	border-top: $sp-space--border solid $border-tertiary;&#13;
	border-bottom: $sp-space--border solid $border-tertiary;&#13;
	background-color: $background-secondary;&#13;
	padding: $sp-space--xs $sp-space--xl;&#13;
&#13;
	.filter-bar {&#13;
		width: 70%;&#13;
	}&#13;
&#13;
	.filter-group {&#13;
		display: flex;&#13;
		align-items: center;&#13;
		color: $text-color;&#13;
		gap: $sp-space--sm;&#13;
		white-space: nowrap;&#13;
&#13;
		fieldset {&#13;
			&gt;.btn-link {&#13;
				&amp;:not(:focus) {&#13;
					color: $text-secondary;&#13;
				}&#13;
			}&#13;
&#13;
			&gt;.btn-link[aria-expanded="true"] {&#13;
				color: $link-hover-color;&#13;
			}&#13;
		}&#13;
&#13;
		.dropdown-menu {&#13;
			min-width: $sp-space--dropdown;&#13;
			max-width: $sp-space--dropdown;&#13;
			padding: $sp-space--sm $sp-space--xs $sp-space--xs;&#13;
&#13;
			.conditional-margin {&#13;
				margin-top: $sp-space--sm;&#13;
			}&#13;
&#13;
			.filter-section {&#13;
				margin: 0px $sp-space--md;&#13;
				display: flex;&#13;
				flex-direction: column;&#13;
				gap: $sp-space--sm;&#13;
				margin-bottom: $sp-space--lg;&#13;
&#13;
				h5 {&#13;
					margin-top: 0;&#13;
				}&#13;
&#13;
				hr {&#13;
					margin: 0;&#13;
				}&#13;
&#13;
				.initials {&#13;
					margin-top: $sp-space--sm;&#13;
				}&#13;
			}&#13;
&#13;
			.filter-section + .filter-section {&#13;
				padding-top: $sp-space--lg;&#13;
				border-top: $sp-space--border solid $border-tertiary;&#13;
			}&#13;
		}&#13;
&#13;
		.mh-filter-drop-downs {&#13;
			z-index: 100;&#13;
		}&#13;
	}&#13;
}&#13;
&#13;
.filter-content {&#13;
	max-height: 340px;&#13;
	overflow-y: auto;&#13;
}&#13;
&#13;
.options-skills {&#13;
	position: relative;&#13;
	right: $sp-space--xl;&#13;
}&#13;
&#13;
&#13;
p {&#13;
	margin: 0;&#13;
}&#13;
&#13;
.filter-actions {&#13;
	margin: 0 $sp-space--md $sp-space--md;&#13;
	padding-top: $sp-space--lg;&#13;
	border-top: $sp-space--border solid $border-tertiary;&#13;
}&#13;
&#13;
.filter-applied {&#13;
	display: none;&#13;
}&#13;
&#13;
.choice-option {&#13;
	display: flex;&#13;
	flex-direction: row;&#13;
	align-items: flex-start;&#13;
	gap: $sp-space--sm;&#13;
	border-radius: $sp-space--xs;&#13;
	cursor: pointer;&#13;
	align-self: stretch;&#13;
	border: $sp-space--border solid transparent;&#13;
	margin-bottom: 0rem;&#13;
}&#13;
&#13;
.choice-option-selected {&#13;
	background: $brand-primary-lightest;&#13;
}&#13;
&#13;
.filter-source-checkbox {&#13;
	opacity: 0;&#13;
	position: absolute;&#13;
	width: $sp-space--lg;&#13;
	height: $sp-space--lg;&#13;
	z-index: -1;&#13;
}&#13;
&#13;
.filter-checkbox {&#13;
	width: $sp-space--lg;&#13;
	height: $sp-space--lg;&#13;
	background: $background-primary;&#13;
	border: $sp-space--border solid $border-primary;&#13;
	border-radius: $border-radius-small;&#13;
	display: flex;&#13;
	justify-content: center;&#13;
	flex-shrink: 0;&#13;
	margin-top: $sp-space--xs;&#13;
	cursor: pointer;&#13;
}&#13;
&#13;
.filter-checkbox-checked {&#13;
	background: $brand-primary;&#13;
	border: none;&#13;
}&#13;
&#13;
.filter-checkbox-icon {&#13;
	font-size: $checkbox-icon-size;&#13;
	line-height: $icon-line-height;&#13;
	margin-left: $sp-space--border;&#13;
	color: $background-primary;&#13;
}&#13;
&#13;
.accordion {&#13;
	background: none;&#13;
	border: none;&#13;
	width: $sp-space--accordion;&#13;
	font-size: $sp-space--lg;&#13;
	display: flex;&#13;
	justify-content: center;&#13;
}&#13;
&#13;
.skill-filter-section-header {&#13;
	display: flex;&#13;
	align-items: center;&#13;
	gap: $sp-space--sm;&#13;
}&#13;
&#13;
.filter-source-header {&#13;
	display: flex;&#13;
	align-items: baseline;&#13;
	gap: $sp-space--sm;&#13;
}&#13;
&#13;
input[type="checkbox"] {&#13;
	margin-top: $sp-space--margin;&#13;
}&#13;
&#13;
button[name="search"]:focus {&#13;
	outline: $sp-space--xxs solid $input-border-focus !important;&#13;
	outline-offset: -$sp-space--xs !important;&#13;
}&#13;
&#13;
.manager-hub-skill-search {&#13;
	padding: $sp-space--sm $sp-space--md $sp-space--lg;&#13;
	width: 100%;&#13;
	.mh-search-form {&#13;
		width: 100%;&#13;
		display: flex;&#13;
		align-content: space-between;&#13;
		border: $sp-space--border solid $border-primary;&#13;
		border-radius: $sp-space--xs;&#13;
		padding: $sp-space--margin $sp-space--sm;&#13;
		height: $sp-space-xxl;&#13;
	}&#13;
	input[type="search"] {&#13;
		height: $sp-space--xl;&#13;
		padding: unset;&#13;
		border: none;&#13;
		box-shadow: none;&#13;
	}&#13;
	.search-icon {&#13;
		align-self: center;&#13;
		color: $border-primary;&#13;
		cursor: default;&#13;
	}&#13;
}&#13;
&#13;
.search-results {&#13;
	margin-bottom: $sp-space--md;&#13;
}&#13;
&#13;
// Flyout Styling&#13;
.modal {&#13;
	.modal-dialog {&#13;
		overflow-y: initial !important;&#13;
		height: 100%;&#13;
		padding: 0rem;&#13;
		margin: 0rem;&#13;
&#13;
		.modal-content {&#13;
			height: 100%;&#13;
			border-radius: 0;&#13;
		}&#13;
&#13;
		.modal-body {&#13;
			max-height: calc(100vh - 135px);&#13;
			overflow-y: auto;&#13;
		}&#13;
&#13;
		.modal-footer:before,&#13;
		.modal-footer:after {&#13;
			content: none;&#13;
		}&#13;
	}&#13;
}&#13;
&#13;
.more-filters-container {&#13;
	margin-left: 25px;&#13;
}&#13;
&#13;
.modal-flyout.fade.in .modal-dialog {&#13;
	transform: translate(0, 0);&#13;
}&#13;
&#13;
.modal-flyout.fade .modal-dialog {&#13;
	margin: 0 0 0 auto;&#13;
	transform: translate(100%, 0);&#13;
}&#13;
&#13;
.flyout-template-container {&#13;
	height: 100%;&#13;
}&#13;
&#13;
.flyout-container {&#13;
	height: 100%;&#13;
&#13;
	h3,&#13;
	h4 {&#13;
		display: inline-block;&#13;
	}&#13;
&#13;
	.panel-body-padding {&#13;
		padding-left: 0;&#13;
	}&#13;
&#13;
	.modal-content {&#13;
		height: 100%;&#13;
		border-radius: 0;&#13;
&#13;
		.modal-header {&#13;
			padding: $sp-space--lg $sp-space--xl;&#13;
			margin: 0&#13;
		}&#13;
&#13;
	}&#13;
&#13;
	.modal-body {&#13;
		padding: $sp-space--xl $sp-space--sm;&#13;
		height: 100% !important;&#13;
		max-height: calc(100% - 135px) !important;&#13;
&#13;
		.panel-title-filter {&#13;
			margin-top: 0rem;&#13;
		}&#13;
&#13;
		.mh-flyout-skill-search {&#13;
			margin-bottom: $sp-space--lg;&#13;
			width: 33%;&#13;
		}&#13;
&#13;
		h3 {&#13;
			margin-bottom: $sp-space--lg;&#13;
		}&#13;
&#13;
		.panel {&#13;
			box-shadow: none;&#13;
			border: none;&#13;
			display: flex;&#13;
			flex-direction: column;&#13;
			gap: $sp-space--sm;&#13;
		}&#13;
&#13;
		.panel + .panel {&#13;
			margin-top: $sp-space--xl;&#13;
		}&#13;
&#13;
		.divider {&#13;
			border: $sp-space--border solid $border-tertiary;&#13;
			margin: $sp-space--xl 0;&#13;
		}&#13;
&#13;
		.flyout-section-checkbox {&#13;
			display: flex;&#13;
			flex-direction: row;&#13;
			align-items: center;&#13;
			gap: $sp-space--sm;&#13;
			border-radius: $sp-space--xs;&#13;
			cursor: pointer;&#13;
			align-self: stretch;&#13;
			border: $sp-space--border solid transparent;&#13;
			margin-bottom: 0rem;&#13;
		}&#13;
&#13;
		.flyout-section-label {&#13;
			font-weight: 700;&#13;
		}&#13;
&#13;
		.panel-body {&#13;
			margin-bottom: $sp-space--sm;&#13;
		}&#13;
&#13;
		.filter-checkbox-label {&#13;
			margin: 0rem;&#13;
		}&#13;
&#13;
		.select-option-container {&#13;
			margin-bottom: $sp-space--sm;&#13;
		}&#13;
&#13;
		.filter-checkbox {&#13;
			margin: 0rem;&#13;
		}&#13;
&#13;
		.flyout-option-grid-container {&#13;
			display: grid;&#13;
			grid-template-columns: $sp-space--grid $sp-space--grid;&#13;
			column-gap: $sp-space--xl;&#13;
			row-gap: $sp-space--sm;&#13;
		}&#13;
&#13;
		.search-section + .search-section{&#13;
			margin-top: $sp-space--sm;&#13;
		}&#13;
&#13;
		#search-section-additional_skills {&#13;
			margin-bottom: $sp-space--xl;&#13;
		}&#13;
&#13;
		#flyout-grid-skills {&#13;
			padding-left: 21px;&#13;
			grid-template-columns: 393px $sp-space--grid;&#13;
		}&#13;
&#13;
		.flyout-options {&#13;
			position: relative;&#13;
			right: $sp-space--xl;&#13;
		}&#13;
&#13;
		.filter-label-flyout {&#13;
			position: relative;&#13;
			right: $sp-space--xl;&#13;
		}&#13;
&#13;
		.show-more-btn {&#13;
			border: none;&#13;
			align-self: flex-start;&#13;
			padding-left: 21px;&#13;
		}&#13;
	}&#13;
&#13;
	.has-search {&#13;
		display: flex;&#13;
		align-content: space-between;&#13;
		border: $sp-space--border solid $border-primary;&#13;
		border-radius: $sp-space--xs;&#13;
		padding: $sp-space--margin $sp-space--sm;&#13;
		max-height: $sp-space-xxl;&#13;
		width: 244px;&#13;
&#13;
		input[type="search"] {&#13;
			border: none;&#13;
			padding: unset;&#13;
			box-shadow: none;&#13;
			max-height: $sp-space--xl;&#13;
		}&#13;
		.search-icon {&#13;
			align-self: center;&#13;
			color: $border-primary;&#13;
		}&#13;
	}&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
	var widgetName = scope.data.widgetName;
	var filterGroupClass =  '.' + widgetName + '-filter-group';

	setTimeout(function() {
		$(document).on('click', '.dropdown-menu', function(event) {
			var attrValue = event.target.getAttribute("data-filter-group-apply");
			if (attrValue === 'filter-desktop-apply') {
				var focusElementId = event.target.getAttribute("data-filter-group-apply-id");
				angular.element(document.getElementById("filter-" + focusElementId)).focus();
			} else if(event.target.getAttribute("data-filter-label") == 'skill-filter-label')
				event.stopPropagation();
		});


		$(document).on('hide.bs.dropdown', filterGroupClass, function(event) {
			var filterGroupId = event.relatedTarget.getAttribute('data-filter-group-id');
			var filterGroup = controller.getFilterGroupById(filterGroupId);
			if(filterGroup)
				updateUnSavedFilters(filterGroup);
		});

	}, 0);

	angular.element(window).on("resize", function() {
		$(".modal-backdrop").hide();
	});

	function updateUnSavedFilters(filterGroup) {
		filterGroup.enableClearButton = filterGroup.selectedCount > 0;
		filterGroup.enableApplyButton = false;
		filterGroup.filterGroupValues.forEach(function(filterValue){
			var isFilterAdded = controller.isPillAlreadyPresent(filterValue);
			if(!isFilterAdded && filterValue.selected)
				filterValue.selected = false;
			else if(isFilterAdded && !filterValue.selected)
				filterValue.selected = true;
		});
	}
}]]></link>
        <name>Copy of Manager Hub Skill Filter</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.allReportees = new sn_mh.ManagerHubTeamConfig().getReporteeDetails(gs.getUserID());
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-09-27 05:25:36</sys_created_on>
        <sys_id>5e7ec65993297110f7c6921354891875</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of Manager Hub Skill Filter</sys_name>
        <sys_package display_value="LEARNING COURSES" source="sn_learning_course">fd6e573c93153110f7c692135489189b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LEARNING COURSES">fd6e573c93153110f7c692135489189b</sys_scope>
        <sys_update_name>sp_widget_5e7ec65993297110f7c6921354891875</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-27 05:25:36</sys_updated_on>
        <template><![CDATA[<div id="skill-filter-desktop-view" ng-include="'skill-filter-desktop'"></div>
<div class="modal fade modal-flyout" id="mh-skill-filter-flyout-modal">
  <div class="modal-dialog modal-lg" ng-if="c.toggleFlyout">
    <div class="flyout-template-container" ng-include="'skill-filter-flyout'"></div>
  </div>
</div>

<div class="filter-pills-container" ng-show="c.filterPills.length">
    <div class="filter-pill-display-flex" id="filter-pills-group" role="group" aria-label="${Currently filtered by}">
      <!-- Applied Filters -->
      <div ng-repeat="filter in c.filterPills">
        <div class="pill rounded">
          <span data-toggle="tooltip" data-placement="top" title="{{filter.name}}" class="pill-text text-overflow-ellipsis"> {{filter.name}} </span>
          <span role="button" ng-click="c.clearPill(filter)" aria-label="{{filter.clearLabel}}" tabindex="0" ng-keydown="c.focusFilter($event, filter)">
            <i class="fa fa-times pointer" aria-hidden="true"></i>
          </span>
        </div>
      </div>
      <button class="btn btn-link btn-sm" ng-click="c.clearAllFilters()" aria-label="${Clear applied filters}" ng-keydown="c.focusFilter($event)">${Clear all}</button>
    </div>
</div> ]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="LEARNING COURSES">fd6e573c93153110f7c692135489189b</application>
        <file_path/>
        <instance_id>8d14605c70013110a258ecc45dec8fa6</instance_id>
        <instance_name>glide_db_dump</instance_name>
        <name>sp_widget_5e7ec65993297110f7c6921354891875</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[api.controller = function($scope, $timeout, i18n, $rootScope, mhSkillMatrixService) {

	var c = this;
	c.filterPills = [];
	c.expandRequiredSkills = false;
	c.expandAdditionalSkills = false;
	c.modifiedFilters = {
		"skills": new Set(),
		"team_members": new Set()
	};
	c.clearLabel = i18n.getMessage("Clear {0}");
	c.toggleFlyout = false;
	c.isSearching = false;
	c.limit = 20;
	c.searchCharLimit = 3;

	c.filterData = [{
		"filterSelectedCount": 0,
		"totalSelected": 0,
		"title": i18n.getMessage("Skills"),
		"showFilterSection": true,
		"showMore": true,
		"filterDisplayCount": 0,
		"isSearchable": true,
		"filterSections": [{
			"filterSectionId": "required_skills",
			"selected": false,
			"sectionSelectedCount": 0,
			"limit": c.limit,
			"displayCount": 0,
			"filterOptions": [],
			"title": i18n.getMessage("Required skills")
		},
		{
			"filterSectionId": "additional_skills",
			"selected": false,
			"sectionSelectedCount": 0,
			"limit": c.limit,
			"displayCount": 0,
			"filterOptions": [],
			"title": i18n.getMessage("Additional skills")
		}
		],
		"filterId": "skills"
	},
	{
		"filterSelectedCount": 0,
		"totalSelected": 0,
		"title": i18n.getMessage("Team members"),
		"filterSections": [{
			"filterSectionId": "reportees",
			"filterOptions": [],
		}],
		"filterId": "team_members"
	}
	];

    function initFilters() {
        var options = mhSkillMatrixService.getFilterOptions();
        updateFilterOptions(options);
    }

    var filterOptionsChangeEvent = mhSkillMatrixService.getFilterOptionsChangeEvent();

    var filterOptionsChangeEventListener = $rootScope.$on(filterOptionsChangeEvent, function(event, data) {
        c.clearAllFilters();
        updateFilterOptions(data);
    });

    function updateFilterOptions(options) {
        var employees = options['employees'];
        var skills = options['skills'];
        var filteredEmployees = c.data.allReportees.filter(function(reportee) {
            return _.includes(employees, reportee.id);
        });
        setFilterOptions('skills', 'required_skills', skills['requiredSkills']);
        setFilterOptions('skills', 'additional_skills', skills['additionalSkills']);
        setFilterOptions('team_members', 'reportees', filteredEmployees);
    }

    $scope.$on('$destroy', function() {
        filterOptionsChangeEventListener();
    });

	function setFilterOptions(filterId, filterSectionId, options) {
		if (_.isEmpty(options))
			return;

		_.forEach(options, function (eachOption) {
			eachOption['selected'] = false;
			eachOption['display'] = false;
		});

		var filter = _.find(c.filterData, _.matchesProperty('filterId', filterId));

		if (!_.isEmpty(filter)) {
			var filterSection = _.find(filter.filterSections, _.matchesProperty('filterSectionId', filterSectionId));
			if (!_.isEmpty(filterSection))
				filterSection.filterOptions = options;
		}
	}
	c.toggleAccordion = function (filterSection) {
		if (filterSection == 'required_skills')
			c.expandRequiredSkills = !c.expandRequiredSkills;
		else
			c.expandAdditionalSkills = !c.expandAdditionalSkills;
	}

	c.onFilterSectionValueChange = function (filter, filterSection) {
		filter.filterSelectedCount -= filterSection.sectionSelectedCount;
		filterSection.filterOptions.forEach(function (filterOption) {
			filterSection.sectionSelectedCount = filterSection.selected ? filterSection.filterOptions.length : 0;
			if (filterSection.selected != filterOption.selected) {
				filterOption.selected = filterSection.selected;
				updateModifiedFilters(filter, filterOption);
			}
		});
		filter.filterSelectedCount += filterSection.sectionSelectedCount;
	}

	c.onFilterValueChange = function (filter, filterSection, filterOption) {
		var option = document.getElementById('option-checkbox-' + filterOption.id);
		if (option.checked) {
			filterSection.sectionSelectedCount++;
			filter.filterSelectedCount++;
		}
		else {
			filterSection.sectionSelectedCount--;
			filter.filterSelectedCount--;
		}
		filterSection.selected = filterSection.sectionSelectedCount &gt;= 0;
		updateModifiedFilters(filter, filterOption);
	};

	c.applyFilter = function (filter) {
		$('#fieldset-' + filter.filterId).removeClass('open');
		filter.totalSelected = filter.filterSelectedCount;
		c.expandRequiredSkills = false;
		c.expandAdditionalSkills = false;
		c.modifiedFilters[filter.filterId].clear();
		addFilterPills(filter);
		resetSearch();
		mhSkillMatrixService.applyFilter(c.filterPills);
	};

	c.applyFilterFlyout = function () {
		$timeout(function () {
			c.filterData.forEach(function (filter) {
				filter.totalSelected = filter.filterSelectedCount;
				c.modifiedFilters[filter.filterId].clear();
				addFilterPills(filter);
				mhSkillMatrixService.applyFilter(c.filterPills);
			});
			resetSearch();
		}, 0);
	}

	c.clearFilterFlyout = function () {
		c.filterData.forEach(function (filter) {
			c.clearFilterGroup(filter);
		});
	}

	c.clearFilterGroup = function (filter) {
		filter.filterSections.forEach(function (filterSection) {
			filterSection.sectionSelectedCount = 0;
			filterSection.selected = false;
			filterSection.filterOptions.forEach(function (filterOption) {
				if (filterOption.selected) {
					filterOption.selected = false;
					updateModifiedFilters(filter, filterOption);
				}
			});
		});
		filter.filterSelectedCount = 0;
	};

	c.clearPill = function (filterOption) {
		updateFilterPills(filterOption);
		updateFilterModel(filterOption);
		mhSkillMatrixService.applyFilter(c.filterPills);
	};

	function updateFilterPills(delPill) {
		c.filterPills = c.filterPills.filter(function (pill) {
			return !(delPill.id === pill.id &amp;&amp; delPill.sourceId === pill.sourceId);
		});
	}

	function updateFilterModel(clearedPill) {
		var filter = _.find(c.filterData, _.matchesProperty('filterId', clearedPill.groupId));
		var filterSection = _.find(filter.filterSections, _.matchesProperty('filterSectionId', clearedPill.sourceId));
		filterSection.filterOptions.forEach(function (filterOption) {
			if (filterOption.id === clearedPill.id) {
				filterOption.selected = false;
				filter.filterSelectedCount--;
				filter.totalSelected--;
				filterSection.sectionSelectedCount--;
			}
		});
	}

	c.checkIfFilterAlreadyAdded = function (filterId, sourceId) {
		var filterPills = c.filterPills;
		var filterPillsLen = filterPills.length;
		if (filterPillsLen.length === 0)
			return false;
		for (var pIdx = 0; pIdx &lt; filterPillsLen; pIdx++)
			if (filterPills[pIdx].id === filterId &amp;&amp; filterPills[pIdx].sourceId === sourceId)
				return true;
		return false;
	};

	c.clearAllFilters = function () {
		c.filterPills.forEach(function (deletedPill) {
			c.clearPill(deletedPill);
		});
		c.filterData.forEach(function (filter) {
			filter.filterSections.forEach(function (filterSection) {
				filterSection.selected = false;
			});
		});
	}

	c.submitSearch = function (filter) {
		var searchText = c.searchTerm.toLowerCase();
		filter.filterDisplayCount = 0;
		filter.filterSections.forEach(function (filterSection) {
			filterSection.displayCount = 0;
		});
		if (searchText) {
			c.isSearching = true;
			if (searchText.length &gt;= c.searchCharLimit) {
				filter.filterSections.forEach(function (filterSection) {
					filterSection.filterOptions.forEach(function (filterOption) {
						filterOption.display = false;
						if (filterOption.name.toLowerCase().indexOf(searchText) &gt; -1) {
							filterOption.display = true;
							filterSection.displayCount++;
						}
					});
					filter.filterDisplayCount += filterSection.displayCount;
				});
			}
		}
		else
			c.isSearching = false;
	}

	c.disableApply = function () {
		var modifiedCount = c.modifiedFilters["skills"].size + c.modifiedFilters['team_members'].size;
		return modifiedCount == 0;
	}

	c.showMore = function (filterSection) {
		filterSection.limit += c.limit;
	}

	c.showLess = function (filterSection) {
		filterSection.limit = c.limit;
	}

	c.disableCancel = function () {
		var totalSelectedCount = 0;
		c.filterData.forEach(function (filter) {
			totalSelectedCount += filter.filterSelectedCount;
		});
		return totalSelectedCount == 0;
	}

	function updateFilterPills(delPill) {
		c.filterPills = c.filterPills.filter(function (pill) {
			return !(delPill.id === pill.id &amp;&amp; delPill.sourceId === pill.sourceId);
		});
	}

	function addFilterPills(filter) {
		var deltaFilters = [];
		var groupId = filter.filterId;
		filter.filterSections.forEach(function (filterSection) {
			var sourceId = filterSection.filterSectionId;
			filterSection.filterOptions.forEach(function (filter) {
				var filterAdded = c.checkIfFilterAlreadyAdded(filter.id, sourceId);
				if (!filterAdded &amp;&amp; filter.selected)
					c.filterPills.push({
						id: filter.id,
						name: filter.name,
						groupId: groupId,
						sourceId: sourceId,
						clearLabel: i18n.format(c.clearLabel, filter.name)
					});
				else if (filterAdded &amp;&amp; !filter.selected)
					deltaFilters.push({
						id: filter.id,
						sourceId: sourceId
					});
			});
		});
		removeUnCheckedFilters(deltaFilters);
	}

	function removeUnCheckedFilters(filters) {
		var filtersLength = filters.length;
		c.filterPills = c.filterPills.filter(function (pill) {
			for (var fIdx = 0; fIdx &lt; filtersLength; fIdx++) {
				if (filters[fIdx].id === pill.id &amp;&amp; filters[fIdx].sourceId === pill.sourceId)
					return false;
			}
			return true;
		});
	}

    initFilters();
	function updateModifiedFilters(filter, filterOption) {
		var filterId = filter.filterId;
		if (c.modifiedFilters[filterId].has(filterOption.id))
			c.modifiedFilters[filterId].delete(filterOption.id);
		else
			c.modifiedFilters[filterId].add(filterOption.id);
	}

	function resetSearch() {
		c.isSearching = false;
		c.searchTerm = null;
	}
};]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;$label-primary-bg: #D1D2EE !default;&amp;#13;
$badge-bg: #656E81 !default;&amp;#13;
$panel-default-text: #181A1F !default;&amp;#13;
$border-primary: #8790A1 !default;&amp;#13;
$border-tertiary: #DADDE2 !default;&amp;#13;
$border-secondary: #ACB2BE !default;&amp;#13;
$brand-primary: #4F52BD !default;&amp;#13;
$background-primary: #FFFFFF !default;&amp;#13;
$text-white: #FFFFFF !default;&amp;#13;
$text-muted: #656E81 !default;&amp;#13;
$text-primary: #181A1F !default;&amp;#13;
$font-size-xs: 12px !default;&amp;#13;
$font-size-small: 14px !default;&amp;#13;
$font-size-lg: 16px !default;&amp;#13;
$sp-space--border: 1px !default;&amp;#13;
$sp-space--xxs: 2px !default;&amp;#13;
$sp-space--xs: 4px !default;&amp;#13;
$sp-space--margin: 6px !default;&amp;#13;
$sp-space--sm: 8px !default;&amp;#13;
$sp-space--accordion: 11px !default;&amp;#13;
$sp-space--md: 12px !default;&amp;#13;
$sp-space--lg: 16px !default;&amp;#13;
$sp-space--xl: 24px !default;&amp;#13;
$sp-space-xxl: 36px !default;&amp;#13;
$sp-space--dropdown: 300px !default;&amp;#13;
$sp-space--grid: 414px;&amp;#13;
$border: #D3D6DC !default;&amp;#13;
$sp-space--close: 6px !default;&amp;#13;
$close-color: var(--special-close-color-default, rgba(0, 0, 0, 0.70));&amp;#13;
$checkbox-icon-size: 10px;&amp;#13;
$icon-line-height: 16px;&amp;#13;
$filter-content-margin: 20px !default;&amp;#13;
$filter-skill-label-width: 152px !default;&amp;#13;
$filter-pill-border: 1px !default;&amp;#13;
$filter-pill-height: 68px !default;&amp;#13;
&amp;#13;
/* Common styles */&amp;#13;
.btn.btn-link:disabled {&amp;#13;
	border: none;&amp;#13;
}&amp;#13;
&amp;#13;
.display-flex {&amp;#13;
	display: flex;&amp;#13;
}&amp;#13;
&amp;#13;
.space-between {&amp;#13;
	justify-content: space-between;&amp;#13;
	align-items: center;&amp;#13;
}&amp;#13;
&amp;#13;
.align-left {&amp;#13;
	text-align: left;&amp;#13;
}&amp;#13;
&amp;#13;
.align-right {&amp;#13;
	text-align: right;&amp;#13;
}&amp;#13;
&amp;#13;
input[type="checkbox"] {&amp;#13;
	accent-color: $brand-primary;&amp;#13;
}&amp;#13;
&amp;#13;
.pointer {&amp;#13;
	cursor: pointer;&amp;#13;
}&amp;#13;
&amp;#13;
.mg-bt-lg {&amp;#13;
	margin-bottom: $sp-space--lg;&amp;#13;
}&amp;#13;
&amp;#13;
#hr-required_skills {&amp;#13;
	margin-bottom: $sp-space--lg;&amp;#13;
}&amp;#13;
&amp;#13;
.pd-initial {&amp;#13;
	padding: initial !important;&amp;#13;
}&amp;#13;
&amp;#13;
/* filter checkbox styles */&amp;#13;
#filter-content-skills {&amp;#13;
	margin-bottom: 0px;&amp;#13;
	margin-left: $filter-content-margin + $sp-space--xl;&amp;#13;
}&amp;#13;
&amp;#13;
.search-list {&amp;#13;
	margin-left: 0;&amp;#13;
}&amp;#13;
&amp;#13;
.default-list-group {&amp;#13;
	position: relative;&amp;#13;
	margin-bottom: 0;&amp;#13;
	.filter-checkbox {&amp;#13;
		position: relative;&amp;#13;
		right: $sp-space--xl;&amp;#13;
	}&amp;#13;
&amp;#13;
	span {&amp;#13;
		position: relative;&amp;#13;
		right: $sp-space--xl;&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
.search-option {&amp;#13;
	padding: unset;&amp;#13;
	margin-left: $sp-space--md;&amp;#13;
}&amp;#13;
&amp;#13;
.search-option + .search-option {&amp;#13;
	padding-top: $sp-space--sm;&amp;#13;
}&amp;#13;
&amp;#13;
.search-warning-flyout {&amp;#13;
	margin-bottom: $sp-space--xl;&amp;#13;
}&amp;#13;
&amp;#13;
.search-warning {&amp;#13;
	padding: $sp-space--xs $sp-space--md;&amp;#13;
	color: $text-secondary;&amp;#13;
}&amp;#13;
&amp;#13;
.list-group-item {&amp;#13;
	border: none;&amp;#13;
	padding: 0px;&amp;#13;
}&amp;#13;
&amp;#13;
li.list-group-item:not(:last-child) {&amp;#13;
	margin-bottom: $sp-space--sm;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-groups {&amp;#13;
	border: 1px solid transparent;&amp;#13;
}&amp;#13;
&amp;#13;
input[type="checkbox"] {&amp;#13;
	cursor: pointer;&amp;#13;
	position: absolute;&amp;#13;
&amp;#13;
	+label {&amp;#13;
		cursor: pointer;&amp;#13;
		padding-left: $sp-space--xl;&amp;#13;
		margin-bottom: 0px;&amp;#13;
		white-space: break-spaces;&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
.filter-label {&amp;#13;
	max-width: $filter-skill-label-width;&amp;#13;
	display: inline-block;&amp;#13;
	overflow: hidden;&amp;#13;
	text-overflow: ellipsis;&amp;#13;
	white-space: nowrap;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-skills-label {&amp;#13;
	position: relative;&amp;#13;
	right: $sp-space--xl;&amp;#13;
}&amp;#13;
&amp;#13;
.option-checkbox {&amp;#13;
	margin-left: 0px !important;&amp;#13;
	position: unset !important;&amp;#13;
	opacity: 0;&amp;#13;
	width: $sp-space--lg;&amp;#13;
	height: $sp-space--lg;&amp;#13;
	z-index: -1;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-select-all {&amp;#13;
	padding: 0px;&amp;#13;
	margin-bottom: $sp-space--sm;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-pill-display-flex {&amp;#13;
	gap: $sp-space--sm;&amp;#13;
	display: flex;&amp;#13;
	flex-wrap: wrap;&amp;#13;
}&amp;#13;
&amp;#13;
/* Filter pill styles */&amp;#13;
.filter-pills-container {&amp;#13;
	padding: $sp-space--md $sp-space--xl;&amp;#13;
	background: $background-secondary;&amp;#13;
	border-bottom: $sp-space--border solid $border-tertiary;&amp;#13;
	align-items: center;&amp;#13;
&amp;#13;
	#filter-pills-group {&amp;#13;
&amp;#13;
		.pill {&amp;#13;
			padding: $sp-space--xs $sp-space--sm;&amp;#13;
			font-weight: 400;&amp;#13;
			font-size: $font-size-small;&amp;#13;
			background: $background-primary !important;&amp;#13;
			box-sizing: border-box;&amp;#13;
			border: $sp-space--border solid $border-secondary;&amp;#13;
		}&amp;#13;
&amp;#13;
		.pill-text {&amp;#13;
			margin: 0px $sp-space--xs;&amp;#13;
		}&amp;#13;
	}&amp;#13;
&amp;#13;
	.filter-pills-height {&amp;#13;
		max-height: $filter-pill-height;&amp;#13;
		overflow: hidden;&amp;#13;
	}&amp;#13;
&amp;#13;
	.filter-pill-actions {&amp;#13;
		padding-top: $sp-space--sm;&amp;#13;
	}&amp;#13;
&amp;#13;
	.filter-pills-view-all-hide {&amp;#13;
		visibility: hidden;&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
/* Desktop &amp;amp; Tablet styles*/&amp;#13;
.filter-container {&amp;#13;
	border-top: $sp-space--border solid $border-tertiary;&amp;#13;
	border-bottom: $sp-space--border solid $border-tertiary;&amp;#13;
	background-color: $background-secondary;&amp;#13;
	padding: $sp-space--xs $sp-space--xl;&amp;#13;
&amp;#13;
	.filter-bar {&amp;#13;
		width: 70%;&amp;#13;
	}&amp;#13;
&amp;#13;
	.filter-group {&amp;#13;
		display: flex;&amp;#13;
		align-items: center;&amp;#13;
		color: $text-color;&amp;#13;
		gap: $sp-space--sm;&amp;#13;
		white-space: nowrap;&amp;#13;
&amp;#13;
		fieldset {&amp;#13;
			&amp;gt;.btn-link {&amp;#13;
				&amp;amp;:not(:focus) {&amp;#13;
					color: $text-secondary;&amp;#13;
				}&amp;#13;
			}&amp;#13;
&amp;#13;
			&amp;gt;.btn-link[aria-expanded="true"] {&amp;#13;
				color: $link-hover-color;&amp;#13;
			}&amp;#13;
		}&amp;#13;
&amp;#13;
		.dropdown-menu {&amp;#13;
			min-width: $sp-space--dropdown;&amp;#13;
			max-width: $sp-space--dropdown;&amp;#13;
			padding: $sp-space--sm $sp-space--xs $sp-space--xs;&amp;#13;
&amp;#13;
			.conditional-margin {&amp;#13;
				margin-top: $sp-space--sm;&amp;#13;
			}&amp;#13;
&amp;#13;
			.filter-section {&amp;#13;
				margin: 0px $sp-space--md;&amp;#13;
				display: flex;&amp;#13;
				flex-direction: column;&amp;#13;
				gap: $sp-space--sm;&amp;#13;
				margin-bottom: $sp-space--lg;&amp;#13;
&amp;#13;
				h5 {&amp;#13;
					margin-top: 0;&amp;#13;
				}&amp;#13;
&amp;#13;
				hr {&amp;#13;
					margin: 0;&amp;#13;
				}&amp;#13;
&amp;#13;
				.initials {&amp;#13;
					margin-top: $sp-space--sm;&amp;#13;
				}&amp;#13;
			}&amp;#13;
&amp;#13;
			.filter-section + .filter-section {&amp;#13;
				padding-top: $sp-space--lg;&amp;#13;
				border-top: $sp-space--border solid $border-tertiary;&amp;#13;
			}&amp;#13;
		}&amp;#13;
&amp;#13;
		.mh-filter-drop-downs {&amp;#13;
			z-index: 100;&amp;#13;
		}&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
.filter-content {&amp;#13;
	max-height: 340px;&amp;#13;
	overflow-y: auto;&amp;#13;
}&amp;#13;
&amp;#13;
.options-skills {&amp;#13;
	position: relative;&amp;#13;
	right: $sp-space--xl;&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
p {&amp;#13;
	margin: 0;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-actions {&amp;#13;
	margin: 0 $sp-space--md $sp-space--md;&amp;#13;
	padding-top: $sp-space--lg;&amp;#13;
	border-top: $sp-space--border solid $border-tertiary;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-applied {&amp;#13;
	display: none;&amp;#13;
}&amp;#13;
&amp;#13;
.choice-option {&amp;#13;
	display: flex;&amp;#13;
	flex-direction: row;&amp;#13;
	align-items: flex-start;&amp;#13;
	gap: $sp-space--sm;&amp;#13;
	border-radius: $sp-space--xs;&amp;#13;
	cursor: pointer;&amp;#13;
	align-self: stretch;&amp;#13;
	border: $sp-space--border solid transparent;&amp;#13;
	margin-bottom: 0rem;&amp;#13;
}&amp;#13;
&amp;#13;
.choice-option-selected {&amp;#13;
	background: $brand-primary-lightest;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-source-checkbox {&amp;#13;
	opacity: 0;&amp;#13;
	position: absolute;&amp;#13;
	width: $sp-space--lg;&amp;#13;
	height: $sp-space--lg;&amp;#13;
	z-index: -1;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-checkbox {&amp;#13;
	width: $sp-space--lg;&amp;#13;
	height: $sp-space--lg;&amp;#13;
	background: $background-primary;&amp;#13;
	border: $sp-space--border solid $border-primary;&amp;#13;
	border-radius: $border-radius-small;&amp;#13;
	display: flex;&amp;#13;
	justify-content: center;&amp;#13;
	flex-shrink: 0;&amp;#13;
	margin-top: $sp-space--xs;&amp;#13;
	cursor: pointer;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-checkbox-checked {&amp;#13;
	background: $brand-primary;&amp;#13;
	border: none;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-checkbox-icon {&amp;#13;
	font-size: $checkbox-icon-size;&amp;#13;
	line-height: $icon-line-height;&amp;#13;
	margin-left: $sp-space--border;&amp;#13;
	color: $background-primary;&amp;#13;
}&amp;#13;
&amp;#13;
.accordion {&amp;#13;
	background: none;&amp;#13;
	border: none;&amp;#13;
	width: $sp-space--accordion;&amp;#13;
	font-size: $sp-space--lg;&amp;#13;
	display: flex;&amp;#13;
	justify-content: center;&amp;#13;
}&amp;#13;
&amp;#13;
.skill-filter-section-header {&amp;#13;
	display: flex;&amp;#13;
	align-items: center;&amp;#13;
	gap: $sp-space--sm;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-source-header {&amp;#13;
	display: flex;&amp;#13;
	align-items: baseline;&amp;#13;
	gap: $sp-space--sm;&amp;#13;
}&amp;#13;
&amp;#13;
input[type="checkbox"] {&amp;#13;
	margin-top: $sp-space--margin;&amp;#13;
}&amp;#13;
&amp;#13;
button[name="search"]:focus {&amp;#13;
	outline: $sp-space--xxs solid $input-border-focus !important;&amp;#13;
	outline-offset: -$sp-space--xs !important;&amp;#13;
}&amp;#13;
&amp;#13;
.manager-hub-skill-search {&amp;#13;
	padding: $sp-space--sm $sp-space--md $sp-space--lg;&amp;#13;
	width: 100%;&amp;#13;
	.mh-search-form {&amp;#13;
		width: 100%;&amp;#13;
		display: flex;&amp;#13;
		align-content: space-between;&amp;#13;
		border: $sp-space--border solid $border-primary;&amp;#13;
		border-radius: $sp-space--xs;&amp;#13;
		padding: $sp-space--margin $sp-space--sm;&amp;#13;
		height: $sp-space-xxl;&amp;#13;
	}&amp;#13;
	input[type="search"] {&amp;#13;
		height: $sp-space--xl;&amp;#13;
		padding: unset;&amp;#13;
		border: none;&amp;#13;
		box-shadow: none;&amp;#13;
	}&amp;#13;
	.search-icon {&amp;#13;
		align-self: center;&amp;#13;
		color: $border-primary;&amp;#13;
		cursor: default;&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
.search-results {&amp;#13;
	margin-bottom: $sp-space--md;&amp;#13;
}&amp;#13;
&amp;#13;
// Flyout Styling&amp;#13;
.modal {&amp;#13;
	.modal-dialog {&amp;#13;
		overflow-y: initial !important;&amp;#13;
		height: 100%;&amp;#13;
		padding: 0rem;&amp;#13;
		margin: 0rem;&amp;#13;
&amp;#13;
		.modal-content {&amp;#13;
			height: 100%;&amp;#13;
			border-radius: 0;&amp;#13;
		}&amp;#13;
&amp;#13;
		.modal-body {&amp;#13;
			max-height: calc(100vh - 135px);&amp;#13;
			overflow-y: auto;&amp;#13;
		}&amp;#13;
&amp;#13;
		.modal-footer:before,&amp;#13;
		.modal-footer:after {&amp;#13;
			content: none;&amp;#13;
		}&amp;#13;
	}&amp;#13;
}&amp;#13;
&amp;#13;
.more-filters-container {&amp;#13;
	margin-left: 25px;&amp;#13;
}&amp;#13;
&amp;#13;
.modal-flyout.fade.in .modal-dialog {&amp;#13;
	transform: translate(0, 0);&amp;#13;
}&amp;#13;
&amp;#13;
.modal-flyout.fade .modal-dialog {&amp;#13;
	margin: 0 0 0 auto;&amp;#13;
	transform: translate(100%, 0);&amp;#13;
}&amp;#13;
&amp;#13;
.flyout-template-container {&amp;#13;
	height: 100%;&amp;#13;
}&amp;#13;
&amp;#13;
.flyout-container {&amp;#13;
	height: 100%;&amp;#13;
&amp;#13;
	h3,&amp;#13;
	h4 {&amp;#13;
		display: inline-block;&amp;#13;
	}&amp;#13;
&amp;#13;
	.panel-body-padding {&amp;#13;
		padding-left: 0;&amp;#13;
	}&amp;#13;
&amp;#13;
	.modal-content {&amp;#13;
		height: 100%;&amp;#13;
		border-radius: 0;&amp;#13;
&amp;#13;
		.modal-header {&amp;#13;
			padding: $sp-space--lg $sp-space--xl;&amp;#13;
			margin: 0&amp;#13;
		}&amp;#13;
&amp;#13;
	}&amp;#13;
&amp;#13;
	.modal-body {&amp;#13;
		padding: $sp-space--xl $sp-space--sm;&amp;#13;
		height: 100% !important;&amp;#13;
		max-height: calc(100% - 135px) !important;&amp;#13;
&amp;#13;
		.panel-title-filter {&amp;#13;
			margin-top: 0rem;&amp;#13;
		}&amp;#13;
&amp;#13;
		.mh-flyout-skill-search {&amp;#13;
			margin-bottom: $sp-space--lg;&amp;#13;
			width: 33%;&amp;#13;
		}&amp;#13;
&amp;#13;
		h3 {&amp;#13;
			margin-bottom: $sp-space--lg;&amp;#13;
		}&amp;#13;
&amp;#13;
		.panel {&amp;#13;
			box-shadow: none;&amp;#13;
			border: none;&amp;#13;
			display: flex;&amp;#13;
			flex-direction: column;&amp;#13;
			gap: $sp-space--sm;&amp;#13;
		}&amp;#13;
&amp;#13;
		.panel + .panel {&amp;#13;
			margin-top: $sp-space--xl;&amp;#13;
		}&amp;#13;
&amp;#13;
		.divider {&amp;#13;
			border: $sp-space--border solid $border-tertiary;&amp;#13;
			margin: $sp-space--xl 0;&amp;#13;
		}&amp;#13;
&amp;#13;
		.flyout-section-checkbox {&amp;#13;
			display: flex;&amp;#13;
			flex-direction: row;&amp;#13;
			align-items: center;&amp;#13;
			gap: $sp-space--sm;&amp;#13;
			border-radius: $sp-space--xs;&amp;#13;
			cursor: pointer;&amp;#13;
			align-self: stretch;&amp;#13;
			border: $sp-space--border solid transparent;&amp;#13;
			margin-bottom: 0rem;&amp;#13;
		}&amp;#13;
&amp;#13;
		.flyout-section-label {&amp;#13;
			font-weight: 700;&amp;#13;
		}&amp;#13;
&amp;#13;
		.panel-body {&amp;#13;
			margin-bottom: $sp-space--sm;&amp;#13;
		}&amp;#13;
&amp;#13;
		.filter-checkbox-label {&amp;#13;
			margin: 0rem;&amp;#13;
		}&amp;#13;
&amp;#13;
		.select-option-container {&amp;#13;
			margin-bottom: $sp-space--sm;&amp;#13;
		}&amp;#13;
&amp;#13;
		.filter-checkbox {&amp;#13;
			margin: 0rem;&amp;#13;
		}&amp;#13;
&amp;#13;
		.flyout-option-grid-container {&amp;#13;
			display: grid;&amp;#13;
			grid-template-columns: $sp-space--grid $sp-space--grid;&amp;#13;
			column-gap: $sp-space--xl;&amp;#13;
			row-gap: $sp-space--sm;&amp;#13;
		}&amp;#13;
&amp;#13;
		.search-section + .search-section{&amp;#13;
			margin-top: $sp-space--sm;&amp;#13;
		}&amp;#13;
&amp;#13;
		#search-section-additional_skills {&amp;#13;
			margin-bottom: $sp-space--xl;&amp;#13;
		}&amp;#13;
&amp;#13;
		#flyout-grid-skills {&amp;#13;
			padding-left: 21px;&amp;#13;
			grid-template-columns: 393px $sp-space--grid;&amp;#13;
		}&amp;#13;
&amp;#13;
		.flyout-options {&amp;#13;
			position: relative;&amp;#13;
			right: $sp-space--xl;&amp;#13;
		}&amp;#13;
&amp;#13;
		.filter-label-flyout {&amp;#13;
			position: relative;&amp;#13;
			right: $sp-space--xl;&amp;#13;
		}&amp;#13;
&amp;#13;
		.show-more-btn {&amp;#13;
			border: none;&amp;#13;
			align-self: flex-start;&amp;#13;
			padding-left: 21px;&amp;#13;
		}&amp;#13;
	}&amp;#13;
&amp;#13;
	.has-search {&amp;#13;
		display: flex;&amp;#13;
		align-content: space-between;&amp;#13;
		border: $sp-space--border solid $border-primary;&amp;#13;
		border-radius: $sp-space--xs;&amp;#13;
		padding: $sp-space--margin $sp-space--sm;&amp;#13;
		max-height: $sp-space-xxl;&amp;#13;
		width: 244px;&amp;#13;
&amp;#13;
		input[type="search"] {&amp;#13;
			border: none;&amp;#13;
			padding: unset;&amp;#13;
			box-shadow: none;&amp;#13;
			max-height: $sp-space--xl;&amp;#13;
		}&amp;#13;
		.search-icon {&amp;#13;
			align-self: center;&amp;#13;
			color: $border-primary;&amp;#13;
		}&amp;#13;
	}&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
	var widgetName = scope.data.widgetName;
	var filterGroupClass =  '.' + widgetName + '-filter-group';

	setTimeout(function() {
		$(document).on('click', '.dropdown-menu', function(event) {
			var attrValue = event.target.getAttribute("data-filter-group-apply");
			if (attrValue === 'filter-desktop-apply') {
				var focusElementId = event.target.getAttribute("data-filter-group-apply-id");
				angular.element(document.getElementById("filter-" + focusElementId)).focus();
			} else if(event.target.getAttribute("data-filter-label") == 'skill-filter-label')
				event.stopPropagation();
		});


		$(document).on('hide.bs.dropdown', filterGroupClass, function(event) {
			var filterGroupId = event.relatedTarget.getAttribute('data-filter-group-id');
			var filterGroup = controller.getFilterGroupById(filterGroupId);
			if(filterGroup)
				updateUnSavedFilters(filterGroup);
		});

	}, 0);

	angular.element(window).on("resize", function() {
		$(".modal-backdrop").hide();
	});

	function updateUnSavedFilters(filterGroup) {
		filterGroup.enableClearButton = filterGroup.selectedCount &gt; 0;
		filterGroup.enableApplyButton = false;
		filterGroup.filterGroupValues.forEach(function(filterValue){
			var isFilterAdded = controller.isPillAlreadyPresent(filterValue);
			if(!isFilterAdded &amp;&amp; filterValue.selected)
				filterValue.selected = false;
			else if(isFilterAdded &amp;&amp; !filterValue.selected)
				filterValue.selected = true;
		});
	}
}]]&gt;&lt;/link&gt;&lt;name&gt;Copy of Manager Hub Skill Filter&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.allReportees = new sn_mh.ManagerHubTeamConfig().getReporteeDetails(gs.getUserID());
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2023-09-27 05:25:36&lt;/sys_created_on&gt;&lt;sys_id&gt;5e7ec65993297110f7c6921354891875&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Copy of Manager Hub Skill Filter&lt;/sys_name&gt;&lt;sys_package display_value="LEARNING COURSES" source="sn_learning_course"&gt;fd6e573c93153110f7c692135489189b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="LEARNING COURSES"&gt;fd6e573c93153110f7c692135489189b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_5e7ec65993297110f7c6921354891875&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2023-09-27 05:25:36&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div id="skill-filter-desktop-view" ng-include="'skill-filter-desktop'"&gt;&lt;/div&gt;
&lt;div class="modal fade modal-flyout" id="mh-skill-filter-flyout-modal"&gt;
  &lt;div class="modal-dialog modal-lg" ng-if="c.toggleFlyout"&gt;
    &lt;div class="flyout-template-container" ng-include="'skill-filter-flyout'"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class="filter-pills-container" ng-show="c.filterPills.length"&gt;
    &lt;div class="filter-pill-display-flex" id="filter-pills-group" role="group" aria-label="${Currently filtered by}"&gt;
      &lt;!-- Applied Filters --&gt;
      &lt;div ng-repeat="filter in c.filterPills"&gt;
        &lt;div class="pill rounded"&gt;
          &lt;span data-toggle="tooltip" data-placement="top" title="{{filter.name}}" class="pill-text text-overflow-ellipsis"&gt; {{filter.name}} &lt;/span&gt;
          &lt;span role="button" ng-click="c.clearPill(filter)" aria-label="{{filter.clearLabel}}" tabindex="0" ng-keydown="c.focusFilter($event, filter)"&gt;
            &lt;i class="fa fa-times pointer" aria-hidden="true"&gt;&lt;/i&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;button class="btn btn-link btn-sm" ng-click="c.clearAllFilters()" aria-label="${Clear applied filters}" ng-keydown="c.focusFilter($event)"&gt;${Clear all}&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt; ]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1328616058</payload_hash>
        <record_name>Copy of Manager Hub Skill Filter</record_name>
        <reverted_from/>
        <source>3d6e573c93153110f7c692135489189d</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-09-27 05:25:36</sys_created_on>
        <sys_id>d27ec69993297110f7c69213548918bf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18ad5198ce40000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-27 05:25:36</sys_updated_on>
        <type>Widget</type>
        <update_guid>1a7ec69980297110f643861df5c4a2be</update_guid>
        <update_guid_history>1a7ec69980297110f643861df5c4a2be:1328616058</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Copy of Manager Hub Skill Filter">85b3872593213110f7c69213548918c1</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-09-28 03:56:39</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>1119df4a7ba2421e8883ad2f2d3967d9</sys_id>
        <sys_metadata>5e7ec65993297110f7c6921354891875</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy of Manager Hub Skill Filter</sys_name>
        <sys_package display_value="LEARNING COURSES" source="sn_learning_course">fd6e573c93153110f7c692135489189b</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="LEARNING COURSES">fd6e573c93153110f7c692135489189b</sys_scope>
        <sys_scope_delete display_value="">1a3779aeab964a0987865615b51071f1</sys_scope_delete>
        <sys_update_name>sp_widget_5e7ec65993297110f7c6921354891875</sys_update_name>
        <sys_update_version display_value="sp_widget_5e7ec65993297110f7c6921354891875">d27ec69993297110f7c69213548918bf</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-09-28 03:56:39</sys_updated_on>
    </sys_metadata_delete>
</record_update>
